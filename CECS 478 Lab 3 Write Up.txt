CECS 478 Lab 3: Write Up

A write up with the following info:
   1. The offsets of the locations changed
   
    Answer:
    The offsets of the locations changed is:
    Adding my name to the credits: 10017e3e
    Replaced SUPER-STAR-TREK with Shane Khan. 

   2. Which value each offset now contains
      
      Answer:
      The value each offsets now contains is “Shane Khan”. 
      The values went from 2d 53 55 50 45 52 2d 20 53 to 53 68 61 6e 65 20 4b 68 61 6e. 
      

   3. The original password that was set
   
      Answer:
      The original password that was set was hacktrek.

   4. How you bypassed the password
   
      Answer: 
      To bypass the password, I had to look in the function destruct, where it had the if statement using XOR and MOVZX
      the pointer was checking the hexadecimal and it would have a jump if zero assembly where only "hacktrek" would be accepted,
      so I decided to use and change the assembly from JZ to JNZ, jump if not zero, where it would basically allow us now to use
      any password and not just hacktrek. 

   5. Your experiences with the project
  
      Answer: 
      This was my first time using GHIDRA and it has been a long time since I have worked with hexadecimals,
      so it was difficult in trying to remember what each instruction mean't. Plus, finding the password and
      trying to bypass the password checker took a very long time to analyze. But, this game was actually pretty cool
      to run, and seeing how I bypassed the password was cool to see. Overall, although a little difficult, I enjoyed trying
      to find different ways in which to see what would work or not. 


   6.  Anything else you want to tell me
       Answer: 
       I had a few troubles with the lab, in terms of submission requirements, when i was committing to the repository I could
       see the changes in my repository but when I wanted to see if actual changes were made, I made a new project and unfortunately
       I couldn't see my changes and I couldn't figure out why. So I have my sst file there and I also added a sst.bin file where it 
       shows the changes that I made. The only issue when I exported the file as a binary, the comments were gone from the file, so I
       assume that the comments are ignored when exporting into binary. Sorry for the inconvenience Professor.
       
       
   Comments from Ghidra Editing: 
   Instruction 100017e3e: Added my named to the credits by using the byte viewer and translating my name from text to hexadecimal.
   Instruction 100003858: Translating from hexadecimal to text, the password is translated to "hacktrek", although I thought the 
                          password was backwards at first. 
   Instruction 100003862: On instruction 100003862, this is where the if statement occurs where it checks the pointer to the 
                          hexadecimal through XOR, then MOVZX, moves with zero extended allowing the password checker to keep 
                          checking the bytes. 
   Instruction 100003865: Password checker. 
   Instruction 10000386c: On instruction, 10000386c, it was previously JZ (jump if zero) which means only the password "hacktrek" 
                          would work. To bypass this password checker, I had to try a the opposite of if zero and use jump if not 
                          zero (JNZ), after running the game, any password worked and this is how I bypassed the password checker. 
   Instruction LAB_10000389C: LAB_10000389C, is the instruction where the password is accepted, and 10000386e, is the instruction 
                              where the password is rejected, so we can use any password of our choosing to bypass the password checker. 
   
